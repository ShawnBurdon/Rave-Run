<?xml version="1.0" encoding="utf-8"?>
<doc>
  <!-- Generated by uIntelliSense 1.6.0.2 -->
  <assembly>
    <name>UnityEngine.Purchasing</name>
  </assembly>
  <members>
    <member name="T:UnityEngine.Purchasing.Extension.AbstractPurchasingModule">
      <summary>
        <para>Helper base class for IAP Modules.</para>
        <para>In addition to providing helper methods, use of an abstract class such as this allows addition of IPurchasingModule methods without breaking compatibility with existing plugins.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Purchasing.Extension.AbstractStore">
      <summary>
        <para>Extension point for purchasing plugins.</para>
        <para>An abstract class is provided so that methods can be added to the IStore without breaking binary compatibility with existing plugins.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Purchasing.Extension.ProductDescription">
      <summary>
        <para>A common format store subsystems use to describe available products.</para>
        <para>Includes purchase state via <c>receipt</c> and <c>transactionId</c>.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Purchasing.Extension.PurchaseFailureDescription">
      <summary>
        <para>Represents a failed purchase as described by a purchasing service.</para>
        <para>Is sent by a store implementation to IAP which forwards this message on to the user.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Purchasing.Extension.IPurchasingBinder">
      <summary>
        <para>Configures Unity IAP with one or more store implementations.</para>
        <para>Passed into IPurchasingModules during Unity IAP initialization.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Purchasing.Extension.IPurchasingModule">
      <summary>
        <para>A Unity IAP configuration of one or more stores.</para>
        <para>Store implementations must provide an implementation of this interface. Use IPurchasingModule implementations with the <c>ConfigurationBuilder</c> to extend Unity IAP's store functionality.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Purchasing.Extension.IStore">
      <summary>
        <para>The public interface of an underlying store system (e.g. Google Play or Apple App Store) typically exposed to Unity IAP extending its in app purchasing platform support.</para>
        <para>Unity IAP is extensible, supporting registration of store systems through <c>IPurchasingModule</c> implementations shared with Unity IAP via a <c>ConfigurationBuilder</c> during initialization.A sample store class:</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Purchasing.Extension.IStoreCallback">
      <summary>Callback used by store implementations to interact with Unity IAP.</summary>
    </member>
    <member name="T:UnityEngine.Purchasing.Extension.IStoreConfiguration">
      <summary>
        <para>Common interface for all extended configuration of stores.</para>
        <para>Use during Unity IAP configuration by <c>IPurchasingModule</c> before initialization. Bound to store during <c>IPurchasingModule</c> configuration via <c>ConfigurationBuilder</c>.Sample store configuration interface (needing implementation), to be instantiated by the time the owning purchasing module is requested to configure its stores:</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Purchasing.ConfigurationBuilder">
      <summary>
        <para>Builds configurations for Unity IAP.</para>
        <para>Collects products and store-specific configuration details.See Also: <see cref="UnityEngine.Purchasing.UnityPurchasing.Initialize" />.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Purchasing.IDs">
      <summary>Maps store-specific product identifiers to one or more store names.</summary>
    </member>
    <member name="T:UnityEngine.Purchasing.Product">
      <summary>
        <para>Represents a product that may be purchased as an In App Purchase.</para>
        <para>Here is an example of a sample Store class working with a Product referencs.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Purchasing.ProductCollection">
      <summary>
        <para>Provides helper methods to retrieve products by id.</para>
        <para>Supports retrieving by both store independent and store-specific product id. Retrieves products registered with Unity IAP.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Purchasing.ProductDefinition">
      <summary>Minimal product definition, used by apps declaring products for sale.</summary>
    </member>
    <member name="T:UnityEngine.Purchasing.ProductMetadata">
      <summary>Localized information about a product, retrieved from a store.</summary>
    </member>
    <member name="T:UnityEngine.Purchasing.PurchaseEventArgs">
      <summary>A purchase that succeeded, including the purchased product along with its purchase receipt.</summary>
    </member>
    <member name="T:UnityEngine.Purchasing.PurchaseFailedEventArgs">
      <summary>
        <para>A purchase failed event containing diagnostic data.</para>
        <para>Explains the purchase failure.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Purchasing.UnityPurchasing">
      <summary>
        <para>Entry point for Applications using Unity IAP.</para>
        <para>Class is available to compiler and runtime when Unity IAP is enabled in Editor's Services window.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Purchasing.IExtensionProvider">
      <summary>
        <para>Provides access to store-specific extended functionality.</para>
        <para>Specific extension's interface type can be associated with a specific store type via instantiating <c>IPurchasingModule</c>'s <c>IPurchasingBinder</c>.Sample extension:</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Purchasing.IStoreController">
      <summary>Used by Applications to control Unity IAP.</summary>
    </member>
    <member name="T:UnityEngine.Purchasing.IStoreExtension">
      <summary>Common interface for all purchasing extensions.</summary>
    </member>
    <member name="T:UnityEngine.Purchasing.IStoreListener">
      <summary>Notifies your Application of purchasing related events.</summary>
    </member>
    <member name="T:UnityEngine.Purchasing.InitializationFailureReason">
      <summary>The various reasons Unity IAP initialization can fail.</summary>
    </member>
    <member name="T:UnityEngine.Purchasing.ProductType">
      <summary>Categories of purchasable product.</summary>
    </member>
    <member name="T:UnityEngine.Purchasing.PurchaseFailureReason">
      <summary>The various reasons a purchase can fail.</summary>
    </member>
    <member name="T:UnityEngine.Purchasing.PurchaseProcessingResult">
      <summary>
        <para>Informs Unity IAP as to whether an Application has finished processing a purchase.</para>
        <para>Use to complete or delay completion of acknowledging receipt of purchase.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.AbstractPurchasingModule.BindConfiguration``1(``0)">
      <summary>Bind a store-specific configuration type to a concrete instance.</summary>
      <param name="instance">The instance to be bound.</param>
      <seealso cref="T:UnityEngine.Purchasing.Extension.IStoreConfiguration" />
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.AbstractPurchasingModule.BindExtension``1(``0)">
      <summary>Bind a store-specific extension type to a concrete instance.</summary>
      <param name="instance">The instance to be bound.</param>
      <seealso cref="T:UnityEngine.Purchasing.IStoreExtension" />
      <seealso cref="M:UnityEngine.Purchasing.Extension.IPurchasingBinder.RegisterExtension``1(``0)" />
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.AbstractPurchasingModule.Configure(UnityEngine.Purchasing.Extension.IPurchasingBinder)">
      <summary>Called when your module is loaded by Unity.</summary>
      <param name="binder">Used to register store implementations, extensions and configuration.</param>
      <seealso cref="M:UnityEngine.Purchasing.Extension.IPurchasingModule.Configure(UnityEngine.Purchasing.Extension.IPurchasingBinder)" />
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.AbstractPurchasingModule.Configure">
      <summary>Called when your module is loaded by Unity.</summary>
      <seealso cref="M:UnityEngine.Purchasing.Extension.IPurchasingModule.Configure(UnityEngine.Purchasing.Extension.IPurchasingBinder)" />
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.AbstractPurchasingModule.RegisterStore(System.String,UnityEngine.Purchasing.Extension.IStore)">
      <summary>
        <para>Register a store implementation along with its name.</para>
        <para>Names are used to determine which store-specific ID to use when interacting with a billing system; eg a store with name 'AppleAppStore' would receive the 'AppleAppStore' store-specific product IDs that the App developer specifies when building their IAP configuration.</para>
      </summary>
      <param name="name">The store's name, eg 'AppleAppStore'.</param>
      <param name="a">The store implementation, or null if running on an unsupported platform.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.AbstractPurchasingModule.BindConfiguration``1(``0)">
      <summary>Bind a store-specific configuration type to a concrete instance.</summary>
      <param name="instance">The instance to be bound.</param>
      <seealso cref="T:UnityEngine.Purchasing.Extension.IStoreConfiguration" />
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.AbstractPurchasingModule.BindExtension``1(``0)">
      <summary>Bind a store-specific extension type to a concrete instance.</summary>
      <param name="instance">The instance to be bound.</param>
      <seealso cref="T:UnityEngine.Purchasing.IStoreExtension" />
      <seealso cref="M:UnityEngine.Purchasing.Extension.IPurchasingBinder.RegisterExtension``1(``0)" />
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.AbstractPurchasingModule.RegisterStore(System.String,UnityEngine.Purchasing.Extension.IStore)">
      <summary>
        <para>Register a store implementation along with its name.</para>
        <para>Names are used to determine which store-specific ID to use when interacting with a billing system; eg a store with name 'AppleAppStore' would receive the 'AppleAppStore' store-specific product IDs that the App developer specifies when building their IAP configuration.</para>
      </summary>
      <param name="name">The store's name, eg 'AppleAppStore'.</param>
      <param name="a">The store implementation, or null if running on an unsupported platform.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.AbstractStore.FinishTransaction(UnityEngine.Purchasing.ProductDefinition,System.String)">
      <summary>Called when Unity IAP has finished processing a purchase.</summary>
      <param name="product">The product that was purchased.</param>
      <param name="transactionId">The transaction ID for the purchase.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.AbstractStore.Initialize(UnityEngine.Purchasing.Extension.IStoreCallback)">
      <summary>Called when Unity IAP is initializing.</summary>
      <param name="callback">Callback for stores to interact with Unity IAP.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.AbstractStore.Purchase(UnityEngine.Purchasing.ProductDefinition,System.String)">
      <summary>Called when a user wants to buy the specified Product.</summary>
      <param name="product">The product to purchase.</param>
      <param name="developerPayload">Any additional developer-supplied data.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.AbstractStore.RetrieveProducts">
      <summary>Fetch product metadata and purchase state for the set of ProductDefinitions.</summary>
    </member>
    <member name="P:UnityEngine.Purchasing.Extension.ProductDescription.metadata">
      <summary>Localized metadata retrieved from the Store.</summary>
    </member>
    <member name="P:UnityEngine.Purchasing.Extension.ProductDescription.receipt">
      <summary>A purchase receipt, if owned. Otherwise <c>null</c>.</summary>
    </member>
    <member name="P:UnityEngine.Purchasing.Extension.ProductDescription.storeSpecificId">
      <summary>The store-specific ID.</summary>
    </member>
    <member name="P:UnityEngine.Purchasing.Extension.ProductDescription.transactionId">
      <summary>The purchase transaction ID, if owned. Otherwise <c>null</c>.</summary>
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.ProductDescription.#ctor(System.String,UnityEngine.Purchasing.ProductMetadata,System.String,System.String)">
      <summary>
        <para>Create a ProductDescription.</para>
        <para>Primarily created internally by Unity IAP.</para>
      </summary>
      <param name="id">The store-specific ID.</param>
      <param name="metadata">Localized metadata retrieved from the Store.</param>
      <param name="receipt">A purchase receipt, if owned. Otherwise <c>null</c>.</param>
      <param name="transactionId">The purchase transaction ID, if owned. Otherwise <c>null</c>.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.ProductDescription.#ctor(System.String,UnityEngine.Purchasing.ProductMetadata)">
      <summary>
        <para>Create a ProductDescription.</para>
        <para>Primarily created internally by Unity IAP.</para>
      </summary>
      <param name="id">The store-specific ID.</param>
      <param name="metadata">Localized metadata retrieved from the Store.</param>
    </member>
    <member name="P:UnityEngine.Purchasing.Extension.PurchaseFailureDescription.message">
      <summary>More information about the purchase failure from Unity IAP or the platform store, if available.</summary>
    </member>
    <member name="P:UnityEngine.Purchasing.Extension.PurchaseFailureDescription.productId">
      <summary>The store-specific product ID which failed to purchase.</summary>
    </member>
    <member name="P:UnityEngine.Purchasing.Extension.PurchaseFailureDescription.reason">
      <summary>The reason for the purchase failure.</summary>
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.PurchaseFailureDescription.#ctor(System.String,UnityEngine.Purchasing.PurchaseFailureReason,System.String)">
      <summary>Creates a PurchaseFailureDescription.</summary>
      <param name="productId">The store-specific product ID which failed to purchase.</param>
      <param name="reason">The reason for the purchase failure.</param>
      <param name="message">More information about the failure from Unity IAP or the platform store, if available.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.IPurchasingBinder.RegisterConfiguration``1(``0)">
      <summary>Informs Unity IAP that extended Configuration is available.</summary>
      <param name="instance">The IStoreConfiguration instance.</param>
      <seealso cref="T:UnityEngine.Purchasing.Extension.IStoreConfiguration" />
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.IPurchasingBinder.RegisterExtension``1(``0)">
      <summary>Informs Unity IAP that a store extension is available.</summary>
      <param name="instance">The extension instance.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.IPurchasingBinder.RegisterStore(System.String,UnityEngine.Purchasing.Extension.IStore)">
      <summary>
        <para>Informs Unity IAP that a store implementation exists, specifying its name.</para>
        <para>Modules can pass <c>null</c><c>IStore</c> instances when running on platforms they do not support.</para>
      </summary>
      <param name="name">The store's name, eg 'AppleAppStore'.</param>
      <param name="a">The store instance.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.IPurchasingModule.Configure(UnityEngine.Purchasing.Extension.IPurchasingBinder)">
      <summary>Called when Unity IAP is loading your module. Register stores and associated extensions using the <c>IPurchasingBinder</c>.</summary>
      <param name="binder">Used to register store implementations, extensions and configuration.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.IStore.FinishTransaction(UnityEngine.Purchasing.ProductDefinition,System.String)">
      <summary>
        <para>Called by Unity IAP when a transaction has been recorded.</para>
        <para>Store systems should perform any housekeeping here, such as closing transactions or consuming consumables.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.IStore.Initialize(UnityEngine.Purchasing.Extension.IStoreCallback)">
      <summary>
        <para>Initialize the store.</para>
        <para>The supplied callback is used by stores to notify Unity IAP of purchasing related events.</para>
      </summary>
      <param name="callback">Used by stores to interact with Unity Purchasing.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.IStore.Purchase(UnityEngine.Purchasing.ProductDefinition,System.String)">
      <summary>
        <para>Handle a purchase request from a user.</para>
        <para>Developer payload is provided for stores that define such a concept (Google Play).</para>
      </summary>
      <param name="product">The product to purchase.</param>
      <param name="developerPayload">Any additional developer-supplied data.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.IStore.RetrieveProducts">
      <summary>Fetch the latest product metadata, including purchase receipts, asynchronously with results returned via IStoreCallback.</summary>
    </member>
    <member name="P:UnityEngine.Purchasing.Extension.IStoreCallback.products">
      <summary>Gets the item with local identifier.</summary>
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.IStoreCallback.OnProductsRetrieved">
      <summary>
        <para>Complete setup by providing a list of available products, complete with metadata and any associated purchase receipts and transaction IDs.</para>
        <para>Any previously unseen purchases, where receipts and transaction IDs are provided, will trigger the normal Unity IAP purchase flow.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.IStoreCallback.OnPurchaseFailed(UnityEngine.Purchasing.Extension.PurchaseFailureDescription)">
      <summary>Call to indicate to Unity IAP that a purchase failed.</summary>
      <param name="desc">Details of the purchase failure.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.IStoreCallback.OnPurchaseSucceeded(System.String,System.String,System.String)">
      <summary>
        <para>Inform Unity IAP of a purchase.</para>
        <para>Unity IAP performs local deduplication based on transaction ID; the App's ProcessPurchase method will only be triggered if the transaction has not already been processed.</para>
      </summary>
      <param name="storeSpecificId">Product that was purchased.</param>
      <param name="receipt">Purchase receipt.</param>
      <param name="transactionIdentifier">Transaction ID.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.Extension.IStoreCallback.OnSetupFailed(UnityEngine.Purchasing.InitializationFailureReason)">
      <summary>
        <para>Indicate that IAP is unavailable for a specific reason, such as IAP being disabled in device settings.</para>
        <para>Note that stores should retry initialisation indefinitely if the device is offline, whilst taking care not to impact device performance.</para>
      </summary>
      <param name="reason">The reason purchasing is unavailable.</param>
    </member>
    <member name="P:UnityEngine.Purchasing.ConfigurationBuilder.products">
      <summary>The products built so far.</summary>
    </member>
    <member name="M:UnityEngine.Purchasing.ConfigurationBuilder.AddProduct(System.String,UnityEngine.Purchasing.ProductType)">
      <summary>
        <para>Add a product with a Unity IAP ID, type and optional set of store-specific IDs.</para>
        <para>Here is an example adding a product inside a Store class.</para>
      </summary>
      <param name="id">The store independent ID.</param>
      <param name="type">The product type.</param>
      <returns>The referenced instance. Suitable for chaining.</returns>
    </member>
    <member name="M:UnityEngine.Purchasing.ConfigurationBuilder.AddProduct(System.String,UnityEngine.Purchasing.ProductType,UnityEngine.Purchasing.IDs)">
      <summary>
        <para>Add a product with a Unity IAP ID, type and optional set of store-specific IDs.</para>
        <para>Here is an example adding a product inside a Store class.</para>
      </summary>
      <param name="id">The store independent ID.</param>
      <param name="type">The product type.</param>
      <param name="storeIDs">An optional set of store-specific identifiers, for when your product has different IDs on different stores.</param>
      <returns>The referenced instance. Suitable for chaining.</returns>
    </member>
    <member name="M:UnityEngine.Purchasing.ConfigurationBuilder.AddProducts">
      <summary>
        <para>Add a collection of ProductDefinitions.</para>
        <para>Assumes store-specific id is identical across platforms; provides no store name configuration mechanism.Here is an example adding products inside a Store class.</para>
      </summary>
      <returns>The referenced instance. Suitable for chaining.</returns>
    </member>
    <member name="M:UnityEngine.Purchasing.ConfigurationBuilder.Configure``1">
      <summary>Access store-specific Configuration settings.</summary>
      <returns>An IStoreConfiguration known to the.</returns>
      <seealso cref="T:UnityEngine.Purchasing.Extension.IStoreConfiguration" />
      <seealso cref="M:UnityEngine.Purchasing.Extension.IPurchasingBinder.RegisterConfiguration``1(``0)" />
    </member>
    <member name="M:UnityEngine.Purchasing.ConfigurationBuilder.Instance(UnityEngine.Purchasing.Extension.IPurchasingModule,UnityEngine.Purchasing.Extension.IPurchasingModule[])">
      <summary>Get an instance of ConfigurationBuilder.</summary>
      <param name="first">The IAP module.</param>
      <param name="rest">Any additional modules.</param>
      <returns>New instance.</returns>
      <seealso cref="M:UnityEngine.Purchasing.ConfigurationBuilder.AddProduct(System.String,UnityEngine.Purchasing.ProductType)" />
    </member>
    <member name="M:UnityEngine.Purchasing.IDs.#ctor">
      <summary>
        <para>Create a new mapping of store identifiers to store names.</para>
        <para>Here is an example of constructing an IDs for a Store class.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Purchasing.IDs.Add(System.String,System.String[])">
      <summary>
        <para>Add a product id which is supported by a list of store platform names.</para>
        <para>Here is an example of adding to an IDs.</para>
      </summary>
      <param name="id">Platform specific Product ID.</param>
      <param name="stores">Array of platform names using this Product ID.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.IDs.GetEnumerator">
      <summary>Enumerator for IDs.</summary>
      <returns>The first string of the pair is the store-specific product id. The second is one of the mapped store names.</returns>
    </member>
    <member name="P:UnityEngine.Purchasing.Product.availableToPurchase">
      <summary>
        <para>Determine if this product is available to purchase according to the store subsystem.</para>
        <para>This will be false if the product's identifier is unknown, incorrect or otherwise disabled with the store provider (ie Apple, Google et al).If this is false, purchase attempts will immediately fail.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Purchasing.Product.definition">
      <summary>Fundamental immutable product properties.</summary>
    </member>
    <member name="P:UnityEngine.Purchasing.Product.hasReceipt">
      <summary>
        <para>Owned Non Consumables and Subscriptions should always have receipts.</para>
        <para>Consumable's receipts are not persisted between app restarts.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Purchasing.Product.metadata">
      <summary>Localized metadata provided by the store system.</summary>
    </member>
    <member name="P:UnityEngine.Purchasing.Product.receipt">
      <summary>
        <para>The purchase receipt for this product, if owned. Otherwise <c>null</c>.</para>
        <para>JSON formatted text. For consumable purchases, this will be the most recent purchase receipt. Consumable receipts are not saved between app restarts.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Purchasing.Product.transactionID">
      <summary>
        <para>A unique identifier for this product's transaction, if available. Otherwise <c>null</c>.</para>
        <para>This will only be available during the session this product was purchased.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Purchasing.ProductCollection.all">
      <summary>All products.</summary>
    </member>
    <member name="M:UnityEngine.Purchasing.ProductCollection.WithID(System.String)">
      <summary>Get the product with store-independent Unity IAP ID.</summary>
      <param name="id">The store-independent ID.</param>
      <returns>A product reference, if found. Otherwise <c>null</c>.</returns>
    </member>
    <member name="M:UnityEngine.Purchasing.ProductCollection.WithStoreSpecificID(System.String)">
      <summary>Get the product with the store-specific ID.</summary>
      <param name="id">Get the product with store-specific ID.</param>
      <returns>A product reference, if found. Otherwise <c>null</c>.</returns>
    </member>
    <member name="P:UnityEngine.Purchasing.ProductDefinition.id">
      <summary>
        <para>Unity IAP product ID. Potentially independent of store IDs.</para>
        <para>Can be the same as the store ID. However store-specific IDs can diverge. An app may use this single ID as an abstract handle for multiple store IDs.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Purchasing.ProductDefinition.storeSpecificId">
      <summary>
        <para>The ID this product has on a store.</para>
        <para>For use with the platform's store and Unity IAP.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Purchasing.ProductDefinition.type">
      <summary>The product type.</summary>
    </member>
    <member name="M:UnityEngine.Purchasing.ProductDefinition.#ctor(System.String,System.String,UnityEngine.Purchasing.ProductType)">
      <summary>Create a ProductDefinition.</summary>
      <param name="id">Store-independent ID.</param>
      <param name="storeSpecificId">Store-specific ID.</param>
      <param name="type">Product type.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.ProductDefinition.Equals(System.Object)">
      <summary>Compares <c>id</c> properties. Requires <c>obj</c> be a <c>ProductDefinition</c>.</summary>
      <param name="obj">A ProductDefinition instance.</param>
      <returns>
        <c>true</c> if this is equal to <c>obj</c> per the equality rules, <c>false</c> otherwise.</returns>
      <seealso cref="P:UnityEngine.Purchasing.ProductDefinition.id" />
    </member>
    <member name="M:UnityEngine.Purchasing.ProductDefinition.GetHashCode">
      <summary>Gets the application-domain-specific hash code of <c>id</c>.</summary>
      <returns>Hash code of <c>id</c>.</returns>
    </member>
    <member name="P:UnityEngine.Purchasing.ProductMetadata.isoCurrencyCode">
      <summary>Product currency in ISO 4217 format; e.g. GBP or USD.</summary>
    </member>
    <member name="P:UnityEngine.Purchasing.ProductMetadata.localizedDescription">
      <summary>Localized product description as retrieved from the store subsystem; e.g. Apple or Google.</summary>
    </member>
    <member name="P:UnityEngine.Purchasing.ProductMetadata.localizedPrice">
      <summary>
        <c>Decimal</c> product price denominated in the currency indicated by <c>isoCurrencySymbol</c>.</summary>
    </member>
    <member name="P:UnityEngine.Purchasing.ProductMetadata.localizedPriceString">
      <summary>
        <para>Localized price <c>string</c>.</para>
        <para>This price is formatted with a currency symbol.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Purchasing.ProductMetadata.localizedTitle">
      <summary>Localized product title as retrieved from the store subsystem; e.g. Apple or Google.</summary>
    </member>
    <member name="M:UnityEngine.Purchasing.ProductMetadata.#ctor(System.String,System.String,System.String,System.String,System.Decimal)">
      <summary>Create a ProductMetadata.</summary>
      <param name="priceString">Formatted product price with currency symbols suitable for display to the user.</param>
      <param name="title">Localized product title.</param>
      <param name="description">Localized product description.</param>
      <param name="currencyCode">ISO 4217 currency code.</param>
      <param name="localizedPrice">Numeric localized price.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.ProductMetadata.#ctor">
      <summary>Create a ProductMetadata.</summary>
    </member>
    <member name="P:UnityEngine.Purchasing.PurchaseEventArgs.purchasedProduct">
      <summary>The <c>Product</c> that was purchased.</summary>
    </member>
    <member name="P:UnityEngine.Purchasing.PurchaseFailedEventArgs.message">
      <summary>More information about the purchase failure, if available. Otherwise <c>null</c>.</summary>
    </member>
    <member name="P:UnityEngine.Purchasing.PurchaseFailedEventArgs.purchasedProduct">
      <summary>The product that failed to purchase.</summary>
    </member>
    <member name="P:UnityEngine.Purchasing.PurchaseFailedEventArgs.reason">
      <summary>The reason for the purchase failure.</summary>
    </member>
    <member name="M:UnityEngine.Purchasing.UnityPurchasing.Initialize(UnityEngine.Purchasing.IStoreListener,UnityEngine.Purchasing.ConfigurationBuilder)">
      <summary>
        <para>Initialize Unity IAP with the specified listener and configuration.</para>
        <para>Here is an example of initializing Unity IAP for a sample Store class.</para>
      </summary>
      <param name="listener">Your Application's listener that processes purchasing related events.</param>
      <param name="builder">Unity IAP configuration.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.IExtensionProvider.GetExtension``1">
      <summary>
        <para>Get the store-specific extension of specified type.</para>
        <para>Sample class using <c>GetExtension</c> to restore previously completed purchase transactions:</para>
      </summary>
      <returns>The Extension type.</returns>
    </member>
    <member name="P:UnityEngine.Purchasing.IStoreController.products">
      <summary>Store products including metadata and purchase receipts.</summary>
    </member>
    <member name="M:UnityEngine.Purchasing.IStoreController.ConfirmPendingPurchase(UnityEngine.Purchasing.Product)">
      <summary>
        <para>Confirm a pending purchase.</para>
        <para>Where an application returned <c>PurchaseProcessingResult.Pending</c> from <c>IStoreListener.ProcessPurchase</c>, this method should be used to inform Unity IAP that the Application has made a record of the purchase. Once a purchase is confirmed, Unity IAP will not inform the application of it again.</para>
      </summary>
      <param name="product">The product to confirm the conclusion of its purchase transaction.</param>
      <seealso cref="T:UnityEngine.Purchasing.PurchaseProcessingResult" />
      <seealso cref="T:UnityEngine.Purchasing.IStoreListener" />
    </member>
    <member name="M:UnityEngine.Purchasing.IStoreController.InitiatePurchase(UnityEngine.Purchasing.Product,System.String)">
      <summary>
        <para>Initiate a purchase for a specific product.</para>
        <para>The application will be informed of the result via their <c>IStoreListener</c> implementation.</para>
      </summary>
      <param name="product">The product to purchase.</param>
      <param name="payload">Any additional developer information to associate with the purchase.</param>
      <seealso cref="T:UnityEngine.Purchasing.Product" />
    </member>
    <member name="M:UnityEngine.Purchasing.IStoreController.InitiatePurchase(System.String,System.String)">
      <summary>
        <para>Initiate a purchase for a specific product.</para>
        <para>The application will be informed of the result via their <c>IStoreListener</c> implementation.</para>
      </summary>
      <param name="productId">The identifier for the product to purchase. This may differ from the store-specific product ID.</param>
      <param name="payload">Any additional developer information to associate with the purchase.</param>
      <seealso cref="T:UnityEngine.Purchasing.Product" />
    </member>
    <member name="M:UnityEngine.Purchasing.IStoreController.InitiatePurchase(UnityEngine.Purchasing.Product)">
      <summary>
        <para>Initiate a purchase for a specific product.</para>
        <para>The application will be informed of the result via their <c>IStoreListener</c> implementation.</para>
      </summary>
      <param name="product">The product to purchase.</param>
      <seealso cref="T:UnityEngine.Purchasing.Product" />
    </member>
    <member name="M:UnityEngine.Purchasing.IStoreController.InitiatePurchase(System.String)">
      <summary>
        <para>Initiate a purchase for a specific product.</para>
        <para>The application will be informed of the result via their <c>IStoreListener</c> implementation.</para>
      </summary>
      <param name="productId">The identifier for the product to purchase. This may differ from the store-specific product ID.</param>
      <seealso cref="T:UnityEngine.Purchasing.Product" />
    </member>
    <member name="M:UnityEngine.Purchasing.IStoreListener.OnInitialized(UnityEngine.Purchasing.IStoreController,UnityEngine.Purchasing.IExtensionProvider)">
      <summary>Called when Unity IAP has retrieved all product metadata and is ready to make purchases.</summary>
      <param name="controller">Access cross-platform Unity IAP functionality.</param>
      <param name="extensions">Access store-specific Unity IAP functionality.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.IStoreListener.OnInitializeFailed(UnityEngine.Purchasing.InitializationFailureReason)">
      <summary>Note that Unity IAP will not call this method if the device is offline, but continually attempt initialization until online.</summary>
      <param name="error">The reason IAP cannot initialize.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.IStoreListener.OnPurchaseFailed(UnityEngine.Purchasing.Product,UnityEngine.Purchasing.PurchaseFailureReason)">
      <summary>Called when a purchase fails.</summary>
      <param name="i">The product the purchase relates to.</param>
      <param name="p">The reason for the failure.</param>
    </member>
    <member name="M:UnityEngine.Purchasing.IStoreListener.ProcessPurchase(UnityEngine.Purchasing.PurchaseEventArgs)">
      <summary>
        <para>Called when a purchase succeeds.</para>
        <para>May be called again at startup for a given purchase if the application previously returned <c>PurchaseProcessingResult.Pending</c> from <c>ProcessPurchase</c>.</para>
      </summary>
      <param name="e">The purchase details.</param>
      <returns>Applications should only return <c>PurchaseProcessingResult.Complete</c> when a permanent record of the purchase has been made. If <c>PurchaseProcessingResult.Pending</c> is returned Unity IAP will continue to notify the app of the purchase on startup, also via <c>ProcessPurchase</c>.</returns>
    </member>
    <member name="F:UnityEngine.Purchasing.InitializationFailureReason.PurchasingUnavailable">
      <summary>
        <para>In App Purchases disabled in device settings.</para>
        <para>IAP may be disabled in security settings, or the system purchasing library may be outdated.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Purchasing.InitializationFailureReason.NoProductsAvailable">
      <summary>
        <para>No products available for purchase.</para>
        <para>Typically indicates a configuration error on the platform's store.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Purchasing.InitializationFailureReason.AppNotKnown">
      <summary>
        <para>The store reported the app as unknown.</para>
        <para>Typically indicates the app has not been created on the relevant developer portal, or the wrong app identifier has been configured.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Purchasing.ProductType.Consumable">
      <summary>Can be purchased repeatedly. Suitable for consumable products such as virtual currencies.</summary>
    </member>
    <member name="F:UnityEngine.Purchasing.ProductType.NonConsumable">
      <summary>Can only be purchased once. Suitable for one-off purchases such as extra levels.</summary>
    </member>
    <member name="F:UnityEngine.Purchasing.ProductType.Subscription">
      <summary>Can be purchased repeatedly and restored. Durable but with a finite duration of validity.</summary>
    </member>
    <member name="F:UnityEngine.Purchasing.PurchaseFailureReason.PurchasingUnavailable">
      <summary>
        <para>The system purchasing feature is unavailable.</para>
        <para>Unity IAP may be disabled in security settings, or the system purchasing library may be outdated.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Purchasing.PurchaseFailureReason.ExistingPurchasePending">
      <summary>
        <para>A purchase was already in progress when a new purchase was requested.</para>
        <para>This is currently unique to Google Play. Retry the new purchase after receiving a callback from either <see cref="UnityEngine.Purchasing.IStoreListener.ProcessPurchase" />. or <see cref="UnityEngine.Purchasing.IStoreListener.OnPurchaseFailed" />.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Purchasing.PurchaseFailureReason.ProductUnavailable">
      <summary>
        <para>The product is not available to purchase on the store.</para>
        <para>Check the product definition in the store.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Purchasing.PurchaseFailureReason.SignatureInvalid">
      <summary>Signature validation of the purchase's receipt failed.</summary>
    </member>
    <member name="F:UnityEngine.Purchasing.PurchaseFailureReason.UserCancelled">
      <summary>
        <para>The user opted to cancel rather than proceed with the purchase.</para>
        <para>This is not specified on platforms that do not distinguish cancellation from other failure (Amazon, Microsoft).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Purchasing.PurchaseFailureReason.PaymentDeclined">
      <summary>
        <para>There was a problem with the payment.</para>
        <para>This is unique to Apple platforms.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Purchasing.PurchaseFailureReason.Unknown">
      <summary>A catch-all for unrecognized purchase problems.</summary>
    </member>
    <member name="F:UnityEngine.Purchasing.PurchaseProcessingResult.Complete">
      <summary>
        <para>The application has finished processing the purchase.</para>
        <para>Unity Purchasing should not inform the application of this transaction again.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Purchasing.PurchaseProcessingResult.Pending">
      <summary>
        <para>The application has not finished processing the purchase, e.g. it is pushing it to a server asynchronously.</para>
        <para>Unity IAP should continue to send the application notifications about this transaction when it starts.</para>
      </summary>
    </member>
  </members>
</doc>